Description: Amazon MSK (Apache Kafka) - Camada Fog

Parameters:
  MSKKafkaVersion:
    Description: "MSK version"
    Type: String
    Default: 3.5.1
    AllowedValues:
      - 3.5.1
  ClientStackName:
    Description: "MSK Admin client stack name"
    Type: String
    Default: "MSKAdminClientStack"
  InstanceType:
    Description: "Tipo de Instancia"
    Type: String
    Default: kafka.t3.small
    AllowedValues:
      - kafka.m7g.large
      - kafka.t3.small    
Resources:
  MSKSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: MSK Security Group
      VpcId: !ImportValue VpcId
      SecurityGroupIngress:
      - Description: allows all trafic from SHDM VPCs 
        IpProtocol: -1
        FromPort: 0
        ToPort: 65535        
        CidrIp: !ImportValue VpcSHCidrBlock 
      - Description: allows all trafic from SHDM Users Layer
        IpProtocol: -1
        FromPort: 0
        ToPort: 65535        
        CidrIp: 172.31.0.0/16
      SecurityGroupEgress:
      - Description: all egress allowed
        IpProtocol: -1
        CidrIp: 0.0.0.0/0
  MSKClusterConfig:
    Type: AWS::MSK::Configuration
    Properties:
      Name: !Sub "${AWS::StackName}-msk-cluster-config"
      ServerProperties: |
        auto.create.topics.enable=false
        default.replication.factor=2
        min.insync.replicas=2
        num.io.threads=8
        num.network.threads=5
        num.partitions=10
        num.replica.fetchers=2
        replica.lag.time.max.ms=30000
        socket.receive.buffer.bytes=102400
        socket.request.max.bytes=104857600
        socket.send.buffer.bytes=102400
        unclean.leader.election.enable=true
        zookeeper.session.timeout.ms=18000
  MSKCluster:
    Type: AWS::MSK::Cluster
    Properties:
      BrokerNodeGroupInfo:
        ClientSubnets: #PubSN1Id,PubSN2Id,PubSN3Id
          - !ImportValue PrivSN2Id
          - !ImportValue PrivSN3Id
        InstanceType: !Ref InstanceType
        SecurityGroups: [!GetAtt MSKSecurityGroup.GroupId]
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: 10
      ClusterName: !Ref 'AWS::StackName'
      EncryptionInfo:
        EncryptionInTransit:
          ClientBroker: TLS
          InCluster: true
      ConfigurationInfo:
        Arn: !Ref MSKClusterConfig
        Revision: 1
      ClientAuthentication:
        Unauthenticated:
          Enabled: false
        Sasl:
          Iam: 
            Enabled: false
          Scram: 
            Enabled: true
      EnhancedMonitoring: PER_TOPIC_PER_BROKER
      KafkaVersion: !Ref MSKKafkaVersion
      NumberOfBrokerNodes: 2
Outputs:
  MSKClusterArn:
    Description: MSK Cluster Arn
    Value: !Ref MSKCluster
    Export:
      Name: !Sub "${AWS::StackName}-ClusterArn"