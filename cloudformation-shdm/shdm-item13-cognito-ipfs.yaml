Description: Cognito IPFS

Parameters:
  AuthName:
    Type: String
    Description: Unique Auth Name for Cognito Resources
    Default: "ipfs"
  DomainName:
    Type: String
    Description: Domain Name
    Default: "ipfs-gateway.fhircloud.com.br"

Resources:

  Certificate: 
    Type: "AWS::CertificateManager::Certificate"
    Properties: 
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      KeyAlgorithm: EC_prime256v1
      CertificateTransparencyLoggingPreference: DISABLED

  UserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: !Sub ${AuthName}-user-pool

  UserPoolDomain: 
    Type: AWS::Cognito::UserPoolDomain 
    Properties:
      UserPoolId: !Ref UserPool 
      Domain: !Ref "AWS::AccountId" 

  # Creates a User Pool Client to be used by the identity pool
  UserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: !Sub ${AuthName}-client
      GenerateSecret: true
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows: 
        - code
      AllowedOAuthScopes: 
        - openid
      SupportedIdentityProviders: 
        - COGNITO
      UserPoolId: !Ref UserPool
      CallbackURLs: 
        - !Sub
          - 'https://${Domain}/oauth2/idpresponse'
          - Domain: !Ref DomainName
 
  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: IPFSEIP1
  EIP2:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: IPFSEIP2
  EIP3:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: IPFSEIP3

Outputs:
  UserPoolId:
    Value: !Ref UserPool
    Export:
      Name: UserPoolId
  UserPoolClientId:
    Value: !Ref UserPoolClient
    Export:
      Name: UserPoolClientId
  CertificateARN:
    Value: !Ref Certificate
    Export:
      Name: CertificateARN      