Description: VPC - Layer Fog - (uso em Sao Paulo - sa-east-1) - 1 VPC (Fog) com 3 subnets em AZs diferentes

### AJUSTAR CONFORME BASELINE (deixar apenas uma subrede publica e 1 privada e uma vpc distinta pra lambda users s3)
Resources:
  #VPC
  vpcSH:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: vpcSH
  #Subnets
  PubSN1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: sa-east-1a
      VpcId: !Ref vpcSH
      CidrBlock: 10.10.0.0/20
      Tags:
        - Key: Name
          Value: PubSN1
  PubSN2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: sa-east-1b
      VpcId: !Ref vpcSH
      CidrBlock: 10.10.16.0/20
      Tags:
        - Key: Name
          Value: PubSN2
  PubSN3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: sa-east-1c
      VpcId: !Ref vpcSH
      CidrBlock: 10.10.32.0/20
      Tags:
        - Key: Name
          Value: PubSN3

  #Internet Gateway  
  igw1SH:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: IG1
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref vpcSH
      InternetGatewayId: !Ref igw1SH

  #Elastic IPs NAT Gateways
#  NatGateway1EIP:
#    Type: AWS::EC2::EIP
#    Properties:
#      Domain: !Ref vpcSH
#      Tags:
#        - Key: Name
#          Value: NG1EIP

  #NAT Gateways
#  NatGateway1:
##    Type: AWS::EC2::NatGateway
#    Properties:
#      AllocationId: !GetAtt NatGateway1EIP.AllocationId
#      SubnetId: !Ref PubSN1
#      Tags:
#        - Key: Name
#          Value: NG1

  #Tabela de Rotas
  rtPub:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref vpcSH
      Tags:
        - Key: Name
          Value: rtPub

  #Associar tabela de rotas as subnets da VPC
  routeTableAssoc1IG:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PubSN1
      RouteTableId: !Ref rtPub

  routeTableAssoc2IG:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PubSN2
      RouteTableId: !Ref rtPub

  routeTableAssoc3IG:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PubSN3
      RouteTableId: !Ref rtPub

  #criando rota default    
  #Rota1:
  #  Type: 'AWS::EC2::Route'
  #  Properties:
  #    RouteTableId: !Ref rtPub
  #    DestinationCidrBlock: 0.0.0.0/0
      #GatewayId: !Ref igw1SH
  #    NatGatewayId: !Ref NatGateway1 #Habilitando NGW pois funções Lambdas não saem via IGW

#Outputs
Outputs:
  VpcId:
    Description: ID of created VPC 1
    Value: !Ref vpcSH
    Export:
      Name: VpcId
  VpcSHCidrBlock:
    Description: CidrBlock of created VPC 1
    Value:
      Fn::GetAtt:
        - vpcSH
        - CidrBlock 
    Export:
      Name: VpcSHCidrBlock     
  PubSN1Id:
    Description: ID of public subnet 1
    Value: !Ref PubSN1
    Export:
      Name: PubSN1Id
  PubSN2Id:
    Description: ID of public subnet 2
    Value: !Ref PubSN2
    Export:
      Name: PubSN2Id
  PubSN3Id:
    Description: ID of public subnet 3
    Value: !Ref PubSN3
    Export:
      Name: PubSN3Id
  rtPubId:
    Description: ID of route table
    Value: !Ref rtPub
    Export:
      Name: rtPubId    